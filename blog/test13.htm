<title id="title">Seat of Your Pants</title>

<center><p><b>Learning </b><b>By </b><b>the </b><b>Seat </b><b>of </b><b>Your </b><b>Pants</b></p></center>
<p>More and more people are realizing the value of learning a scripting or programmimg language either to further their career or to be more computer savvy. And that's great. I'm all here for it.</p>
<p>Every so often, though, I'm asked where to begin, as if the start of the journey begins with the first page of a specific book or the enrollment in a specific class before you can write your first app. The correct, though less satisfying answer is simple.</p>
<p>Just do it.</p>
<p>But at the same time, I hate that phrase so much. This age-old basketball shoe slogan still comes off as flippant, callous, pretentious and...</p>
<img class="illust" src="images/kick.png"/>
<p>...yeah. That.</p>
<p>But that's not what we're talking about at all.</p>
<p>Lately, I've been coaching my cousin in learning C++ for a college course. Since it's been a hot minute since I've actually <b>used </b>C++ (Linux projects are written in C, and Bash/Python suffices for smaller projects), I had to brush up in a hurry. This brought back memories of my first exposure to programming as well as an ancient proverb that described my learning process.</p>
<p>"Tell me, I forget. Show me, I understand. Let me do it, I remember."</p>
<p>This is how most apprenticeship professions work. Learn by doing in a safe, guided environment, giving the apprentice a slow rollout of tools to build something meaningful. Then, when he has learned all he needs, he can build his masterpiece.</p>
<p>A far cry from "Jump out of an airplane and invent the parachute on the way down."</p>
<p>And yet we feel we can't when it comes to computers. To us, they are hefty investments, machines of precision, mysterious black-boxes, holders of our livelihoods and nothing to tinker with. Forgetting that at their core, these are easily reprogrammable dumb machines that only know the values of "on" and "off".</p>
<p>So brush up I did. I set out to build a simple Sudoku program using the nCurses library to build a text-based terminal interface. Was I a C++ expert who knew everything about nCurses? Nope. But, I knew two things. 1) If I need a tool to get over a design hurdle, the community has my back. 2) It's just Sudoku. If I mess up, NORAD isn't going to launch its nuclear warheads.</p>
<img class="illust" src="images/curiousgame.png"/>
<p>A curious game...</p>
<p>But at the end of the day, I'll remember what I've learned because it's an experience, not just a memory I'm filing away for later. I've made a connection because it is now useful to me. And I'm not alone. So many beginner's journeys follow the the same theme of going through lessons and tutorials and remembering nothing, but later diving in and retaining core memories based upon the pride of having built something themselves.</p>
<p>If I can draw a rectangle on the screen, I can do anything!</p>
<p>Ever since you were born, you naturally learned by the seat of your pants. There is nothing special about "Just doing it." The trick instead is giving yourself grace and permission to stumble your way there.</p>
<p>Because oftentimes that's the best way to learn.</p>
